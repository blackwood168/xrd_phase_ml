name: Monitor Changes, Lint, and Send Notifications

on:
  push:
    branches: [ dev ]  # Adjust this to the branch you want to monitor
  workflow_dispatch:

jobs:
  lint_and_notify:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install flake8
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Run flake8
      id: flake8
      run: |
        flake8_output=$(flake8 scripts/auto_commit.py pl_models.py test.py train.py \
              models/unet_fft.py xrd_transformer.py model.py kek.py \
              datasets/train.py datasets/test.py || true)
        echo "$flake8_output" > flake8_output.txt
        # Escape newlines and quotes for GitHub Actions output
        lint_results=$(head -n 5 flake8_output.txt)
        echo "lint_results=$lint_results" >> $GITHUB_OUTPUT

    - name: Check for changes
      id: check_changes
      run: |
        # Fetch both branches
        git fetch origin main dev

        # Compare changes between dev and main branches (only files < 150 MB)
        git diff --name-only origin/main origin/dev > changes.txt

        # Filter files smaller than 150 MB
        awk '{
          "du -b " $1 "| awk \047{if ($1 < 150000000) print $0}\047" | getline size;
          if (size != "") print $1
        }' changes.txt > small_changes.txt

        if [ -s small_changes.txt ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "files_changed=$(cat changes.txt)" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Get Commit Details
      id: commit_details
      run: |
          # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∫–æ–º–º–∏—Ç–∞
          message=$(git log -1 --pretty=%B | sed 's/"/\\"/g')
          author=$(git log -1 --pretty=%an | sed 's/"/\\"/g')
          echo "message=$message" >> $GITHUB_OUTPUT 
          echo "author=$author" >> $GITHUB_OUTPUT

    - name: Send Telegram Notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          üîÑ –ù–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã!
          
          –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: ${{ steps.commit_details.outputs.message || '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è' }}
          –ê–≤—Ç–æ—Ä: ${{ steps.commit_details.outputs.author || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä' }}
          
          –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:
          ${{ steps.check_changes.outputs.files_changed || '–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤' }}
          
          –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${{ github.repository }}
          –°—Å—ã–ª–∫–∞: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}
          
          ‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ª–∏–Ω—Ç–∏–Ω–≥–∞:
          ${{ steps.flake8.outputs.lint_results || '–ù–µ—Ç –∑–∞–º–µ—á–∞–Ω–∏–π –ª–∏–Ω—Ç–µ—Ä–∞' }}